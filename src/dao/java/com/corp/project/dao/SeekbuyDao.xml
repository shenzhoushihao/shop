<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- seekbuy[seekbuy]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2018-05-04 01:35:41 -->
<mapper namespace="com.corp.project.dao.SeekbuyDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="bid" parameterType="SeekbuyPO">
		INSERT INTO seekbuy (
		<if test="title != null and title != ''">
	         title, <!-- title -->
		</if>
		<if test="description != null and description != ''">
	         description, <!-- description -->
		</if>
		<if test="uid != null">
	         uid, <!-- uid -->
		</if>
		<if test="createdtime != null and createdtime != ''">
	         createdtime, <!-- createdtime -->
		</if>
	          bid
		)VALUES(
		<if test="title != null and title != ''">
	          #{title, jdbcType=VARCHAR}, <!-- title -->
	    </if>
		<if test="description != null and description != ''">
	          #{description, jdbcType=VARCHAR}, <!-- description -->
	    </if>
		<if test="uid != null">
	          #{uid, jdbcType=INTEGER}, <!-- uid -->
	    </if>
		<if test="createdtime != null and createdtime != ''">
	          #{createdtime, jdbcType=VARCHAR}, <!-- createdtime -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="bid" parameterType="SeekbuyPO">
		INSERT INTO seekbuy (
		    <include refid="column" />
		)
		VALUES (
		    #{bid, jdbcType=INTEGER},  <!-- bid -->
		    #{title, jdbcType=VARCHAR},  <!-- title -->
		    #{description, jdbcType=VARCHAR},  <!-- description -->
		    #{uid, jdbcType=INTEGER},  <!-- uid -->
		    #{createdtime, jdbcType=VARCHAR}  <!-- createdtime -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="SeekbuyPO">
		UPDATE seekbuy
		<set>
			<if test="bid != null">
		          bid = #{bid, jdbcType=INTEGER},  <!-- bid -->
			</if>
			<if test="title != null">
		          title = #{title, jdbcType=VARCHAR},  <!-- title -->
			</if>
			<if test="description != null">
		          description = #{description, jdbcType=VARCHAR},  <!-- description -->
			</if>
			<if test="uid != null">
		          uid = #{uid, jdbcType=INTEGER},  <!-- uid -->
			</if>
			<if test="createdtime != null">
		          createdtime = #{createdtime, jdbcType=VARCHAR},  <!-- createdtime -->
			</if>
		</set>
		WHERE  bid = #{bid}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM seekbuy WHERE  bid = #{bid}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="SeekbuyPO">
		SELECT
		<include refid="column" />
		FROM seekbuy WHERE  bid = #{bid}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="SeekbuyPO">
		SELECT
		    <include refid="column" />
		FROM seekbuy
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="SeekbuyPO">
		SELECT
			<include refid="column" />	
		FROM seekbuy
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="SeekbuyPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM seekbuy
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="SeekbuyPO">
		SELECT
			<include refid="column" />	
		FROM seekbuy
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="SeekbuyPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM seekbuy
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM seekbuy
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM seekbuy
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  bid,  <!-- bid -->
		  title,  <!-- title -->
		  description,  <!-- description -->
		  uid,  <!-- uid -->
		  createdtime  <!-- createdtime -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  seekbuy.bid,  <!-- bid -->
		  seekbuy.title,  <!-- title -->
		  seekbuy.description,  <!-- description -->
		  seekbuy.uid,  <!-- uid -->
		  seekbuy.createdtime  <!-- createdtime -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="bid != null ">
		      AND bid = #{bid}  <!-- bid -->
		</if>
	    <if test="title != null and title != ''">
		      AND title = #{title}  <!-- title -->
		</if>
	    <if test="description != null and description != ''">
		      AND description = #{description}  <!-- description -->
		</if>
	   <if test="uid != null ">
		      AND uid = #{uid}  <!-- uid -->
		</if>
	    <if test="createdtime != null and createdtime != ''">
		      AND createdtime = #{createdtime}  <!-- createdtime -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="title != null and title != ''">
		      AND title like '${title}%'  <!-- title -->
		</if>
	    <if test="description != null and description != ''">
		      AND description like '${description}%'  <!-- description -->
		</if>
	    <if test="createdtime != null and createdtime != ''">
		      AND createdtime like '${createdtime}%'  <!-- createdtime -->
		</if>
	</sql>
	
</mapper>